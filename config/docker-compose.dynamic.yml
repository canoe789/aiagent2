version: '3.8'

services:
  # PostgreSQL Database - Fixed port for stability
  postgres:
    image: postgres:13
    container_name: helix_postgres
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-helix}
      - POSTGRES_USER=${POSTGRES_USER:-helix_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-helix_secure_password_2024}
    ports:
      - "5432:5432"  # Fixed port for database stability
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-helix_user} -d ${POSTGRES_DB:-helix}"]
      interval: 30s
      timeout: 10s
      retries: 3

  # FastAPI Application - Dynamic port allocation
  api:
    build:
      context: ..
      dockerfile: config/Dockerfile
    container_name: helix_api
    environment:
      - API_HOST=0.0.0.0
      - API_PORT=8000  # Internal container port (fixed)
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=${POSTGRES_DB:-helix}
      - POSTGRES_USER=${POSTGRES_USER:-helix_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-helix_secure_password_2024}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - DEFAULT_AI_PROVIDER=${DEFAULT_AI_PROVIDER:-gemini}
    ports:
      - "0:8000"  # Dynamic host port allocation by Docker
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ../src:/app/src
      - ../schemas:/app/schemas
      - ../frontend:/app/frontend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy - Provides stable endpoint
  nginx:
    image: nginx:alpine
    container_name: helix_nginx
    ports:
      - "8080:80"  # Stable endpoint for frontend access
    volumes:
      - ./nginx-dynamic.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      api:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data: