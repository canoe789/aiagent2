# Project HELIX .gitignore 规范化建议

# 基于系统级CLAUDE.md智能文件管理系统规范
# 目标：防止临时文件、调试脚本、日志等污染版本控制

# =============================================================================
# 🗂️ 临时文件和调试内容 (核心新增)
# =============================================================================
tmp/                    # 项目临时文件统一目录
*.log                   # 所有日志文件
*.tmp                   # 临时文件
*_debug.py             # 调试脚本
*_test.py              # 临时测试脚本
debug_*.py             # debug开头的脚本
test_*.py              # test开头的临时脚本 (注意：不包括tests/目录下的正式测试)
check_*.py             # 检查脚本
trace_*.py             # 追踪脚本
track_*.py             # 跟踪脚本
cleanup_*.py           # 清理脚本
delete_*.py            # 删除脚本
export_*.py            # 导出脚本
emergency_*.log        # 紧急重启日志
system.log             # 系统日志
production.log         # 生产日志
helix*.log             # helix相关日志

# =============================================================================
# 🐍 Python 开发环境
# =============================================================================
__pycache__/
*.py[cod]
*$py.class
*.so
*.egg
*.egg-info/
dist/
build/
develop-eggs/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
*.wheel
*.whl

# =============================================================================
# 🔧 开发工具和IDE
# =============================================================================
.vscode/
.idea/
*.swp
*.swo
*~
.DS_Store
Thumbs.db

# =============================================================================
# 🌐 环境变量和配置
# =============================================================================
.env                    # 环境变量文件
.env.local
.env.*.local
config/local.py         # 本地配置
config/development.py   # 开发配置
config/production.py    # 生产配置

# =============================================================================
# 🧪 测试和覆盖率
# =============================================================================
.coverage
htmlcov/
.tox/
.coverage.*
coverage.xml
*.cover
.hypothesis/
.pytest_cache/
.cache
nosetests.xml
test-results/

# =============================================================================
# 📦 包管理
# =============================================================================
pip-log.txt
pip-delete-this-directory.txt
.pip-log.txt
.installed.cfg
*.egg-info

# =============================================================================
# 🔄 版本控制
# =============================================================================
.git/
*.orig
*.rej

# =============================================================================
# 🗄️ 数据库
# =============================================================================
*.db
*.sqlite
*.sqlite3
db.sqlite3
database.db
*.db-journal

# =============================================================================
# 📁 特定目录排除
# =============================================================================
node_modules/           # 前端依赖
vendor/                 # 第三方库
.venv/                 # Python虚拟环境
venv/                  # Python虚拟环境
env/                   # Python虚拟环境
ENV/                   # Python虚拟环境

# =============================================================================
# 🏗️ 构建产物
# =============================================================================
build/
dist/
*.tar.gz
*.zip
*.exe
*.dmg
*.pkg
*.deb
*.rpm

# =============================================================================
# 📊 日志和监控
# =============================================================================
logs/
*.log
access.log
error.log
debug.log
application.log
celery.log
gunicorn.log
nginx.log

# =============================================================================
# 📷 媒体文件 (项目特定)
# =============================================================================
uploads/
media/
static/collected/
.media/

# =============================================================================
# 🔐 安全敏感文件
# =============================================================================
*.key
*.pem
*.p12
*.crt
*.csr
credentials.json
secrets.json
private_key.json

# =============================================================================
# 📱 移动和前端开发
# =============================================================================
.expo/
.expo-shared/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# =============================================================================
# ☁️ 云服务配置
# =============================================================================
.aws/
.gcp/
.azure/
terraform.tfstate*
.terraform/

# =============================================================================
# 📈 性能和监控
# =============================================================================
*.prof
*.pstats
.nyc_output/
coverage/

# =============================================================================
# 🔄 备份文件
# =============================================================================
*.bak
*.backup
*.old
*.orig
*.save
*~

# =============================================================================
# Project HELIX 特定排除
# =============================================================================
job_*_outputs/          # 作业输出目录
agent_outputs/          # Agent输出
helix_env/             # HELIX特定环境
.pytest_cache/         # pytest缓存

# =============================================================================
# 实施说明
# =============================================================================
# 1. 将以上内容追加到现有.gitignore文件
# 2. 运行 git rm --cached <filename> 移除已跟踪的临时文件
# 3. 提交更新的.gitignore
# 4. 执行 git clean -fd 清理未跟踪文件 (谨慎执行)
# 5. 设置 pre-commit hooks 防止未来污染

# 重要提醒：
# - tmp/目录是核心改进，必须添加
# - 检查现有.gitignore是否与此冲突
# - 谨慎处理已经tracked的文件
# - 团队同步此规范确保一致性