#!/bin/bash
# Project HELIX 手动规范化执行指令
# 请在项目根目录 /projects/Projects/aiagent/ 下执行

echo "🚀 Project HELIX 规范化执行指令"
echo "请在项目根目录下逐行执行以下命令"
echo "=================================="

echo ""
echo "📍 第1步: 进入项目根目录"
echo "cd /projects/Projects/aiagent/"

echo ""
echo "📁 第2步: 创建tmp子目录结构"
echo "mkdir -p tmp/debug tmp/utilities tmp/tests tmp/logs tmp/archives"

echo ""
echo "🐛 第3步: 移动调试脚本到tmp/debug/"
echo "mv debug_agent5.py tmp/ && echo '✅ debug_agent5.py → tmp/'"
echo "mv debug_job20.py tmp/ && echo '✅ debug_job20.py → tmp/'"
echo "mv test_agent2_debug.py tmp/ && echo '✅ test_agent2_debug.py → tmp/'"

echo ""
echo "🛠️ 第4步: 移动工具脚本到tmp/utilities/"
echo "mv check_agent_outputs.py tmp/ && echo '✅ check_agent_outputs.py → tmp/'"
echo "mv check_job_tasks.py tmp/ && echo '✅ check_job_tasks.py → tmp/'"
echo "mv cleanup_with_env.py tmp/ && echo '✅ cleanup_with_env.py → tmp/'"
echo "mv delete_all_tasks.py tmp/ && echo '✅ delete_all_tasks.py → tmp/'"
echo "mv delete_all_tasks_direct.py tmp/ && echo '✅ delete_all_tasks_direct.py → tmp/'"
echo "mv delete_via_api.py tmp/ && echo '✅ delete_via_api.py → tmp/'"
echo "mv direct_cleanup.py tmp/ && echo '✅ direct_cleanup.py → tmp/'"
echo "mv export_agent_outputs.py tmp/ && echo '✅ export_agent_outputs.py → tmp/'"
echo "mv trace_job_flow.py tmp/ && echo '✅ trace_job_flow.py → tmp/'"
echo "mv track_workflow.py tmp/ && echo '✅ track_workflow.py → tmp/'"

echo ""
echo "🧪 第5步: 移动临时测试到tmp/tests/"
echo "mv test_complete_workflow.py tmp/ && echo '✅ test_complete_workflow.py → tmp/'"
echo "mv test_db_connection.py tmp/ && echo '✅ test_db_connection.py → tmp/'"
echo "mv test_frontend_integration.py tmp/ && echo '✅ test_frontend_integration.py → tmp/'"
echo "mv test_agent5_trigger.py tmp/ && echo '✅ test_agent5_trigger.py → tmp/'"
echo "mv test_browser.html tmp/ && echo '✅ test_browser.html → tmp/'"

echo ""
echo "📋 第6步: 移动日志文件到tmp/logs/"
echo "mv emergency_restart.log tmp/ && echo '✅ emergency_restart.log → tmp/'"
echo "mv helix.log tmp/ && echo '✅ helix.log → tmp/'"
echo "mv helix_real_agents.log tmp/ && echo '✅ helix_real_agents.log → tmp/'"
echo "mv production.log tmp/ && echo '✅ production.log → tmp/'"
echo "mv system.log tmp/ && echo '✅ system.log → tmp/'"

echo ""
echo "📦 第7步: 移动归档文件到tmp/archives/"
echo "mv prompt.txt tmp/ && echo '✅ prompt.txt → tmp/'"
echo "mv job_26_outputs tmp/ 2>/dev/null && echo '✅ job_26_outputs/ → tmp/'"

echo ""
echo "📚 第8步: 移动文档到docs/"
echo "mv FRONTEND_SETUP.md docs/ && echo '✅ FRONTEND_SETUP.md → docs/'"
echo "mv QUICK_START.md docs/ && echo '✅ QUICK_START.md → docs/'"
echo "mv SYSTEM_STARTUP_GUIDE.md docs/ && echo '✅ SYSTEM_STARTUP_GUIDE.md → docs/'"

echo ""
echo "📋 第9步: 创建文档索引"
echo "cat > docs/INDEX.md << 'EOF'"
echo "# Project HELIX Documentation Index"
echo ""
echo "## 🚀 快速开始"
echo "- [Quick Start Guide](QUICK_START.md)"
echo "- [Frontend Setup](FRONTEND_SETUP.md)"
echo "- [System Startup Guide](SYSTEM_STARTUP_GUIDE.md)"
echo ""
echo "## 🏗️ 架构文档"
echo "- [README.md](../README.md) - 项目架构蓝图"
echo "- [CLAUDE.md](../CLAUDE.md) - AI协作指南"
echo ""
echo "## 📊 项目管理"
echo "- [Project Progress](PROJECT_PROGRESS.md)"
echo "- [Process Management](PROCESS_MANAGEMENT.md)"
echo "- [Port Configuration](PORT_CONFIGURATION_ANALYSIS.md)"
echo "- [Dynamic Port Management](DYNAMIC_PORT_MANAGEMENT_GUIDE.md)"
echo "- [Data Cleanup SOP](DIRTY_DATA_CLEANUP_SOP.md)"
echo ""
echo "---"
echo "**目标:** 5分钟内找到所需信息，提升开发效率"
echo "EOF"

echo ""
echo "🔒 第10步: 更新.gitignore"
echo "cat >> .gitignore << 'EOF'"
echo ""
echo "# Project HELIX 临时文件管理"
echo "tmp/debug/"
echo "tmp/utilities/"
echo "tmp/tests/"
echo "tmp/logs/"
echo "tmp/archives/"
echo "*.log"
echo "*_debug.py" 
echo "debug_*.py"
echo "check_*.py"
echo "prompt.txt"
echo "job_*_outputs/"
echo "EOF"

echo ""
echo "🔍 第11步: 验证结果"
echo "echo '📊 根目录文件统计:'"
echo "ls -la | grep -E '^-' | wc -l"
echo "echo '🗂️ tmp目录内容:'"
echo "ls -la tmp/"
echo "echo '📚 docs目录内容:'"
echo "ls -la docs/"

echo ""
echo "🎉 执行完成！"
echo "============="
echo "项目结构现在符合企业级标准!"